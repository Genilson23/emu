CXX = g++

CXXFLAGS := -Wall -fPIC
ifeq ($(GCOV), true)
	CXXFLAGS += -fprofile-arcs -ftest-coverage
endif

CPPFLAGS :=
ifeq ($(UT), true)
	CPPFLAGS += -DeMU_UT
endif

SOURCES_DIR = ../src/core
SOURCES += $(wildcard $(SOURCES_DIR)/common/*.cpp)
SOURCES += $(wildcard $(SOURCES_DIR)/network/*.cpp)
SOURCES += $(wildcard $(SOURCES_DIR)/network/tcp/*.cpp)
SOURCES += $(wildcard $(SOURCES_DIR)/network/udp/*.cpp)
SOURCES += $(wildcard $(SOURCES_DIR)/user/*.cpp)

INCLUDES := -I$(wildcard ../inc/)
INCLUDES += -I$(wildcard ../inc/core/)
INCLUDES += -I$(wildcard ../inc/ut/)

LIBS := -lboost_system -lboost_thread -lpthread
ifeq ($(GCOV), true)
	LIBS+= -lgcov
endif

LDFLAGS :=  -shared
OBJECTS := $(SOURCES:%.cpp=%.o)
OUTPUT_DIR := bin

GCOVR_FILES := $(SOURCES:%.cpp=%.gcda)
GCOVR_FILES += $(SOURCES:%.cpp=%.gcno)

all: libcore

libcore: $(OBJECTS)
	$(CXX) $^ $(LDFLAGS) $(LIBS) -o $(OUTPUT_DIR)/$@.so
	
%.o: %.cpp
	$(CXX) $(CPPFLAGS) $(INCLUDES) $(CXXFLAGS)  -c $< -o $@

clean:
	$(RM) $(OBJECTS)
	
clean_gcovr:
	$(RM) $(GCOVR_FILES)
	
