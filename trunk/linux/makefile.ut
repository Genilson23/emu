CXX = g++

CXXFLAGS := -Wall
ifeq ($(GCOV), true)
	CXXFLAGS += -fprofile-arcs -ftest-coverage
endif

CPPFLAGS := -DeMU_UT

SOURCES_DIR = ../src/ut
SOURCES := $(wildcard $(SOURCES_DIR)/*.cpp)
SOURCES += $(wildcard $(SOURCES_DIR)/env/*.cpp)
SOURCES += $(wildcard $(SOURCES_DIR)/env/core/*.cpp)
SOURCES += $(wildcard $(SOURCES_DIR)/env/core/tcp/*.cpp)
SOURCES += $(wildcard $(SOURCES_DIR)/env/core/udp/*.cpp)
SOURCES += $(wildcard $(SOURCES_DIR)/env/core/user/*.cpp)
SOURCES += $(wildcard $(SOURCES_DIR)/test/*.cpp)
SOURCES += $(wildcard $(SOURCES_DIR)/test/core/*.cpp)

INCLUDES := -I$(wildcard ../inc/)
INCLUDES += -I$(wildcard ../inc/core/)
INCLUDES += -I$(wildcard ../inc/ut/)

LIBS := -Lbin/ -lcore -lgmock -lgtest -lboost_system -lboost_thread -lpthread
ifeq ($(GCOV), true)
	LIBS+= -lgcov
endif

OBJECTS := $(SOURCES:%.cpp=%.o)
OUTPUT_DIR := bin

GCOVR_FILES := $(SOURCES:%.cpp=%.gcda)
GCOVR_FILES += $(SOURCES:%.cpp=%.gcno)

all: ut

ut: $(OBJECTS)
	$(CXX) $^ $(LIBS) -o $(OUTPUT_DIR)/$@
	
%.o: %.cpp
	$(CXX) $(CPPFLAGS) $(INCLUDES) $(CXXFLAGS)  -c $< -o $@

clean:
	$(RM) $(OBJECTS)

clean_gcovr:
	$(RM) $(GCOVR_FILES)
